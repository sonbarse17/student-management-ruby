name: Deploy to Kubernetes

on:
  workflow_run:
    workflows: ["Terraform Apply"]
    types:
      - completed
  workflow_dispatch: # Manual trigger
    inputs:
      action:
        description: 'Choose action'
        required: true
        default: 'deploy'
        type: choice
        options:
        - deploy
        - destroy

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'deploy') || github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v2

      - name: Install gke-gcloud-auth-plugin
        run: gcloud components install gke-gcloud-auth-plugin --quiet

      - name: Configure kubectl
        env:
          USE_GKE_GCLOUD_AUTH_PLUGIN: True
        run: |
          PROJECT_ID=$(gcloud config get-value project)
          gcloud container clusters get-credentials my-gke-cluster \
            --region us-central1 \
            --project $PROJECT_ID

      - name: Create Rails Master Key Secret
        env:
          USE_GKE_GCLOUD_AUTH_PLUGIN: True
        run: |
          kubectl create secret generic rails-master-key \
            --from-file=master.key=config/master.key \
            --dry-run=client -o yaml --validate=false | kubectl apply -f - --validate=false

      - name: Deploy Database
        env:
          USE_GKE_GCLOUD_AUTH_PLUGIN: True
        run: |
          kubectl apply -f k8s/db-svc.yml --validate=false
          kubectl apply -f k8s/db-deploy.yml --validate=false
          kubectl wait --for=condition=ready pod -l app=student-app-db --timeout=300s
          
          echo "Waiting for database to be fully ready..."
          sleep 30
          
          echo "Running database migrations..."
          kubectl apply -f k8s/db-init-job.yml --validate=false
          kubectl wait --for=condition=complete job/db-migration --timeout=300s || true

      - name: Deploy Application
        env:
          USE_GKE_GCLOUD_AUTH_PLUGIN: True
        run: |
          kubectl apply -f k8s/app-svc.yml --validate=false
          kubectl apply -f k8s/app-deployment.yml --validate=false
          kubectl apply -f k8s/ingress.yml --validate=false

      - name: Verify Deployment
        env:
          USE_GKE_GCLOUD_AUTH_PLUGIN: True
        run: |
          echo "Checking deployment status..."
          kubectl get pods
          echo "\nService endpoints:"
          kubectl get svc
          echo "\nIngress status and IP:"
          kubectl get ingress
          echo "\nWaiting for external IP (may take 10-15 minutes)..."
          kubectl wait --for=jsonpath='{.status.loadBalancer.ingress[0].ip}' ingress/rails-ingress --timeout=300s || true
          
          echo "\nCurrent ingress status:"
          kubectl get ingress rails-ingress -o wide
          
          EXTERNAL_IP=$(kubectl get ingress rails-ingress -o jsonpath='{.status.loadBalancer.ingress[0].ip}' 2>/dev/null || echo "")
          if [ -n "$EXTERNAL_IP" ]; then
            echo "\n✅ Application is accessible at: http://$EXTERNAL_IP/"
          else
            echo "\n⏳ External IP not ready yet. Check ingress status in a few minutes:"
            echo "kubectl get ingress rails-ingress"
            echo "\nOnce ready, access at: http://EXTERNAL_IP/"
          fi
          
          echo "\n================================="
          echo "Deployment Complete!"
          echo "================================="

  destroy:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy' }}
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v2

      - name: Install gke-gcloud-auth-plugin
        run: gcloud components install gke-gcloud-auth-plugin --quiet

      - name: Configure kubectl
        env:
          USE_GKE_GCLOUD_AUTH_PLUGIN: True
        run: |
          PROJECT_ID=$(gcloud config get-value project)
          gcloud container clusters get-credentials my-gke-cluster \
            --region us-central1 \
            --project $PROJECT_ID

      - name: Destroy Kubernetes Resources
        env:
          USE_GKE_GCLOUD_AUTH_PLUGIN: True
        run: |
          echo "Destroying all Kubernetes resources..."
          kubectl delete -f k8s/ingress.yml --ignore-not-found=true
          kubectl delete -f k8s/app-deployment.yml --ignore-not-found=true
          kubectl delete -f k8s/app-svc.yml --ignore-not-found=true
          kubectl delete -f k8s/db-deploy.yml --ignore-not-found=true
          kubectl delete -f k8s/db-svc.yml --ignore-not-found=true
          kubectl delete -f k8s/db-init-job.yml --ignore-not-found=true
          kubectl delete secret rails-master-key --ignore-not-found=true
          
          echo "Destroying ArgoCD..."
          kubectl delete namespace argocd --ignore-not-found=true
          
          echo "All resources destroyed successfully!"