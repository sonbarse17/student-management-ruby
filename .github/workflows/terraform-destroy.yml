name: Terraform Destroy (GCP)

on:
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/gke

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: |
          PROJECT_ID=$(gcloud config get-value project)
          terraform init \
            -backend-config="bucket=$PROJECT_ID-terraform-state" \
            -backend-config="prefix=gke/state"

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Destroy
        run: |
          terraform destroy -auto-approve
          
          # Fallback: Delete cluster directly if still exists
          PROJECT_ID=$(gcloud config get-value project)
          if gcloud container clusters describe my-gke-cluster --region=us-central1 --project=$PROJECT_ID >/dev/null 2>&1; then
            echo "Cluster still exists, deleting directly..."
            gcloud container clusters delete my-gke-cluster --region=us-central1 --project=$PROJECT_ID --quiet
          fi

      - name: Delete State Bucket (Optional)
        run: |
          PROJECT_ID=$(gcloud config get-value project)
          echo "WARNING: This will delete the Terraform state bucket!"
          echo "Uncomment the next line if you want to delete it:"
          gcloud storage rm -r gs://$PROJECT_ID-terraform-state --quiet
          echo "State bucket gs://$PROJECT_ID-terraform-state preserved for future use"
