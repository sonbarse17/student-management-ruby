name: Install ArgoCD

on:
  workflow_run:
    workflows: ["Deploy to Kubernetes"]
    types:
      - completed
  workflow_dispatch: # Manual trigger

jobs:
  install-argocd:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v2

      - name: Install gke-gcloud-auth-plugin
        run: gcloud components install gke-gcloud-auth-plugin --quiet

      - name: Configure kubectl
        env:
          USE_GKE_GCLOUD_AUTH_PLUGIN: True
        run: |
          PROJECT_ID=$(gcloud config get-value project)
          gcloud container clusters get-credentials my-gke-cluster \
            --region us-central1 \
            --project $PROJECT_ID

      - name: Install ArgoCD with Helm
        env:
          USE_GKE_GCLOUD_AUTH_PLUGIN: True
        run: |
          echo "Installing ArgoCD with Helm..."
          kubectl create namespace argocd --dry-run=client -o yaml | kubectl apply -f -
          
          helm repo add argo https://argoproj.github.io/argo-helm
          helm repo update
          
          helm install argocd argo/argo-cd \
            --namespace argocd \
            --set server.service.type=LoadBalancer \
            --set server.extraArgs[0]=--insecure \
            --wait --timeout=300s
          
          echo "Waiting for external IP..."
          kubectl wait --for=jsonpath='{.status.loadBalancer.ingress[0].ip}' service/argocd-server -n argocd --timeout=300s || true

      - name: Get ArgoCD Details
        env:
          USE_GKE_GCLOUD_AUTH_PLUGIN: True
        run: |
          echo "================================="
          echo "ArgoCD Connection Details"
          echo "================================="
          ARGOCD_IP=$(kubectl get svc argocd-server -n argocd -o jsonpath='{.status.loadBalancer.ingress[0].ip}' 2>/dev/null || echo "Pending...")
          ARGOCD_PASSWORD=$(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" 2>/dev/null | base64 -d || echo "Not ready yet")
          
          echo "ArgoCD URL: https://$ARGOCD_IP"
          echo "Username: admin"
          echo "Password: $ARGOCD_PASSWORD"
          echo "================================="
          echo "Note: ArgoCD may take a few minutes to get external IP"